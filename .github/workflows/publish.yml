name: Build & Publish Arch Package

on:
  push:
    branches: ["master"]
  workflow_dispatch:

env:
  GPG_KEY: E52F66792B423413EA5F8B3BBCAFC8F93FFA4C23
  SYSTEM_CACHE_KEY: arch-build-nitrous-system-2
  USER_CACHE_KEY: arch-build-nitrous-user-2

jobs:
  build:
    runs-on: ubuntu-latest
    container:
      image: archlinux
      volumes:
        - /:/host

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Restore system-wide cache
        id: system-cache-restore
        uses: actions/cache/restore@v4
        with:
          key: ${{ env.SYSTEM_CACHE_KEY }}
          path: |
            /var/cache/pacman

      - name: Clean up
        run: |
          df -h
          echo "Cleaning up..."
          # https://github.com/jlumbroso/free-disk-space/blob/main/action.yml
          rm -rf \
            /host/usr/local/lib/android \
            /host/usr/share/dotnet \
            /host/opt/ghc \
            /host/usr/local/.ghcup
          df -h

      - name: Install necessary packages
        run: |
          pacman -Sy --noconfirm gnupg git \
          'clang' 'llvm' 'lld' \
          'bc' 'cpio' 'gettext' 'libelf' \
          'pahole' 'perl' 'python' 'tar' \
          'xz' 'graphviz' 'imagemagick' 'python-sphinx' \
          'coreutils' \
          'inetutils' 'kmod' 'lzop' 'rust' base-devel tar ccache

      - name: Delete previous system cache
        if: ${{ steps.system-cache-restore.outputs.cache-hit }}
        continue-on-error: true
        run: |
          gh extension install actions/gh-actions-cache
          gh actions-cache delete "${{ env.SYSTEM_CACHE_KEY }}" --confirm
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Save system cache
        id: system-cache-save
        if: always()
        uses: actions/cache/save@v4
        with:
          path: |
            /var/cache/pacman
          key: ${{ steps.system-cache-restore.outputs.cache-primary-key }}

      - name: Create user
        run: |
          useradd -m -s /bin/bash -U builder
          echo "builder ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers
    
      - name: Import GPG key
        run: echo -n $GPG_PRIVATE_KEY | base64 -d | runuser -u builder -- gpg --batch --import
        env:
          GPG_PRIVATE_KEY: ${{ secrets.GPG_PRIVATE_KEY }}

      - name: Restore user cache
        id: user-cache-restore
        uses: actions/cache/restore@v4
        with:
          key: ${{ env.USER_CACHE_KEY }}
          path: |
            ${{ env.GITHUB_WORKSPACE }}/linux-nitrous
            /home/builder/.ccache
  
      # Runs a single command using the runners shell
      - name: Build package
        id: build_package
        run: |
          pkgver=$(cat .SRCINFO | grep "pkgver =" | head -n1 | sed -re 's/^.*pkgver.*= (.+)$/\1/')
          pkgrel=$(cat .SRCINFO | grep "pkgrel =" | head -n1 | sed -re 's/^.*pkgrel.*= (.+)$/\1/')
          chown -R builder:builder .
          export MAKEFLAGS="-j$(nproc --all)"
          runuser -u builder -- makepkg --noconfirm --needed -dfC --sign --key $GPG_KEY
          packages=()
          signature_files=()
          for pkg in $(ls *.pkg.tar.*); do
            if [[ "$pkg" != *".sig" ]]; then
                packages+=( $(realpath $pkg) )
                signature_files+=( $(realpath $pkg).sig )
            fi
          done
          checksum_kernel="$(sha256sum *-*.tar.* | cut -d ' ' -f1)"
          checksum_headers="$(sha256sum *headers-*.tar* | cut -d ' ' -f1)"
          
          repo_file=repo.db.tar.gz
          repo_files_file=repo.files.tar.gz
          for pkg in ${packages[@]}; do
              echo "Adding $pkg"
              repo-add --verify --sign --key $GPG_KEY $repo_file $pkg
          done

          echo "~"
          ls -la ~
          echo "."
          ls -la .
          
          echo "Uploading repo files..."
          ln -sf "$repo_file" linux-nitrous.db
          ln -sf "$repo_file.sig" linux-nitrous.db.sig
          ln -sf "$repo_files_file" linux-nitrous.files
          ln -sf "$repo_files_file.sig" linux-nitrous.files.sig

          echo "VERSION=$pkgver-$pkgrel" | tee -a $GITHUB_OUTPUT
          (
            echo "ARTIFACTS<<EOF"
            for pkg in ${packages[@]}; do
              echo $(basename $pkg)
            done
            for file in ${signature_files[@]}; do
              echo $(basename $file)
            done
            echo "linux-nitrous.db"
            echo "linux-nitrous.db.sig"
            echo "linux-nitrous.files"
            echo "linux-nitrous.files.sig"
            echo "EOF"
          ) | tee -a $GITHUB_OUTPUT

      - name: Delete previous user cache
        if: ${{ steps.user-cache-restore.outputs.cache-hit }}
        continue-on-error: true
        run: |
          gh extension install actions/gh-actions-cache
          gh actions-cache delete "${{ env.USER_CACHE_KEY }}" --confirm
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Save user cache
        id: user-cache-save
        if: always()
        uses: actions/cache/save@v4
        with:
          path: |
            /home/builder/.ccache
          key: ${{ steps.user-cache-restore.outputs.cache-primary-key }}

      - name: Release
        uses: softprops/action-gh-release@v2
        with:
          token: "${{ secrets.RELEASE_GH_TOKEN }}"
          repository: "xdevs23/linux-nitrous"
          tag_name: "v${{ steps.build_package.outputs.VERSION }}"
          name: "Linux Nitrous ${{ steps.build_package.outputs.VERSION }}"
          body: ""
          files: ${{ steps.build_package.outputs.ARTIFACTS }}
            
